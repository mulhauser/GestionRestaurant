{"version":3,"file":"extension.js","sourceRoot":"","sources":["../../../../src/extensions/socket-server/extension.ts"],"names":[],"mappings":";;AACA,gDAA6C;AAC7C,qCAA2C;AAc3C;IAEW,MAAM,CAAC,SAAS,CAAC,MAAoB;QACxC,MAAM,CAAC;YACH,KAAK,EAAE,eAAe;YACtB,MAAM;SACT,CAAC;IACN,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CAAC,MAAkB,EAAE,MAAoB;QACpD,MAAM,CAAC,uBAAU;aACZ,EAAE,CAAC,IAAI,wBAAe,CAAC,MAAM,CAAC,CAAC;aAC/B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACP,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,eAAe;YACtB,KAAK,EAAE,CAAC;SACX,CAAC,CAAC,CAAC;IACZ,CAAC;CACJ;AA1BD,0CA0BC","sourcesContent":["import { CoreModule, Extension, ExtensionWithConfig, OnExtensionLoad } from '../../core/interfaces';\nimport { Observable } from 'rxjs/Observable';\nimport { WebSocketServer } from './server';\n\nexport interface SocketConfig {\n    port: number;\n    autoAcceptConnections?: boolean;\n    keepaliveInterval?: number;\n    keepaliveGracePeriod?: number;\n    closeTimeout?: number;\n    tls?: {\n        key: Buffer;\n        cert: Buffer;\n    }\n}\n\nexport class SocketServerExt implements OnExtensionLoad {\n\n    public static setConfig(config: SocketConfig): ExtensionWithConfig {\n        return {\n            token: SocketServerExt,\n            config\n        };\n    }\n\n    /**\n     * Initilization of the extension\n     * Create the socket server\n     *\n     * @param  {CoreModule} module\n     * @param  {SocketConfig} config\n     * @returns Observable\n     */\n    onExtensionLoad(module: CoreModule, config: SocketConfig): Observable<Extension> {\n        return Observable\n            .of(new WebSocketServer(config))\n            .map(_ => ({\n                instance: this,\n                token: SocketServerExt,\n                value: _\n            }));\n    }\n}\n"]}