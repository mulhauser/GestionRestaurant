"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("../../core");
const server_1 = require("./server");
const extension_1 = require("./extension");
const rxjs_1 = require("rxjs");
let SocketServerService = class SocketServerService {
    constructor(socketServer) {
        this.socketServer = socketServer;
    }
    /**
     * Get WebSocket Server instance
     *
     * @returns Server
     */
    instance() {
        return this.socketServer;
    }
    /**
     * Stop the WebSocket Server
     *
     * @returns Observable
     */
    stop() {
        return rxjs_1.Observable
            .of(this.socketServer)
            .do(_ => _.getHttpServer().close())
            .do(_ => _.getServer().shutDown())
            .map(_ => null);
    }
};
SocketServerService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject(extension_1.SocketServerExt)),
    __metadata("design:paramtypes", [server_1.WebSocketServer])
], SocketServerService);
exports.SocketServerService = SocketServerService;
//# sourceMappingURL=service.js.map