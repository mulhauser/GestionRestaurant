{"version":3,"file":"service.js","sourceRoot":"","sources":["../../../../src/extensions/http-server/service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAgD;AAChD,yBAA2C;AAC3C,+BAAkC;AAGlC,IAAa,iBAAiB,GAA9B;IAEI,YACmC,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;IAClD,CAAC;IAEJ;;;;OAIG;IACH,QAAQ;QACJ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACH,IAAI;QACA,MAAM,CAAC,iBAAU;aACZ,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;CAEJ,CAAA;AAzBY,iBAAiB;IAD7B,iBAAU,EAAE;IAIJ,WAAA,aAAM,CAAC,gBAAa,CAAC,CAAA;qCAAqB,SAAM;GAH5C,iBAAiB,CAyB7B;AAzBY,8CAAiB","sourcesContent":["import { Injectable, Inject } from '../../core';\nimport { HttpServerExt, Server } from './';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpServerService {\n\n    constructor(\n        @Inject(HttpServerExt) private httpServer: Server\n    ) {}\n\n    /**\n     * Get HapiJS Server instance\n     *\n     * @returns Server\n     */\n    instance(): Server {\n        return this.httpServer;\n    }\n\n    /**\n     * Stop the HapiJS Server\n     *\n     * @returns Observable\n     */\n    stop(): Observable<Error> {\n        return Observable\n            .fromPromise(this.httpServer.stop());\n    }\n\n}\n"]}