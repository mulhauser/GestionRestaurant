"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LifecycleHooksEnum;
(function (LifecycleHooksEnum) {
    LifecycleHooksEnum[LifecycleHooksEnum["OnPreAuth"] = 'onPreAuth'] = "OnPreAuth";
    LifecycleHooksEnum[LifecycleHooksEnum["OnPostAuth"] = 'onPostAuth'] = "OnPostAuth";
    LifecycleHooksEnum[LifecycleHooksEnum["OnPreHandler"] = 'onPreHandler'] = "OnPreHandler";
    LifecycleHooksEnum[LifecycleHooksEnum["OnPostHandler"] = 'onPostHandler'] = "OnPostHandler";
    LifecycleHooksEnum[LifecycleHooksEnum["OnPreResponse"] = 'onPreResponse'] = "OnPreResponse";
})(LifecycleHooksEnum = exports.LifecycleHooksEnum || (exports.LifecycleHooksEnum = {}));
var LifecycleEventsEnum;
(function (LifecycleEventsEnum) {
    LifecycleEventsEnum[LifecycleEventsEnum["OnPreAuth"] = 'onPreAuth'] = "OnPreAuth";
    LifecycleEventsEnum[LifecycleEventsEnum["OnPostAuth"] = 'onPostAuth'] = "OnPostAuth";
    LifecycleEventsEnum[LifecycleEventsEnum["OnPreHandler"] = 'onPreHandler'] = "OnPreHandler";
    LifecycleEventsEnum[LifecycleEventsEnum["OnPostHandler"] = 'onPostHandler'] = "OnPostHandler";
    LifecycleEventsEnum[LifecycleEventsEnum["OnPreResponse"] = 'onPreResponse'] = "OnPreResponse";
})(LifecycleEventsEnum = exports.LifecycleEventsEnum || (exports.LifecycleEventsEnum = {}));
var LifecycleComponentEnum;
(function (LifecycleComponentEnum) {
    LifecycleComponentEnum[LifecycleComponentEnum["OnEvent"] = 'onEvent'] = "OnEvent";
})(LifecycleComponentEnum = exports.LifecycleComponentEnum || (exports.LifecycleComponentEnum = {}));
var RouteMethodsEnum;
(function (RouteMethodsEnum) {
    RouteMethodsEnum[RouteMethodsEnum["OnGet"] = 'onGet'] = "OnGet";
    RouteMethodsEnum[RouteMethodsEnum["OnPost"] = 'onPost'] = "OnPost";
    RouteMethodsEnum[RouteMethodsEnum["OnPut"] = 'onPut'] = "OnPut";
    RouteMethodsEnum[RouteMethodsEnum["OnDelete"] = 'onDelete'] = "OnDelete";
    RouteMethodsEnum[RouteMethodsEnum["OnPatch"] = 'onPatch'] = "OnPatch";
    RouteMethodsEnum[RouteMethodsEnum["OnOptions"] = 'onOptions'] = "OnOptions";
})(RouteMethodsEnum = exports.RouteMethodsEnum || (exports.RouteMethodsEnum = {}));
function enumByMethod(method) {
    switch (method) {
        case 'get':
            return RouteMethodsEnum.OnGet;
        case 'post':
            return RouteMethodsEnum.OnPost;
        case 'put':
            return RouteMethodsEnum.OnPut;
        case 'patch':
            return RouteMethodsEnum.OnPatch;
        case 'options':
            return RouteMethodsEnum.OnOptions;
        case 'delete':
            return RouteMethodsEnum.OnDelete;
        default:
            throw new Error('Method does not exist');
    }
}
exports.enumByMethod = enumByMethod;
//# sourceMappingURL=enums.js.map