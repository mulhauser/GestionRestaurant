{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../../src/core/metadata.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAE1B;;;;;;;GAOG;AACH,yBAAgC,IAAS;IACrC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC;SACxB,GAAG,EAAE,CAAC;AACf,CAAC;AAHD,0CAGC;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,oCAA8C,IAAS,EAAE,IAAY;IACjE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC;SACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;SAC3C,GAAG,CAAC,CAAC,CAAC,EAAE,CAAI,CAAC,CAAC;SACd,GAAG,EAAE,CAAC;AACf,CAAC;AALD,gEAKC;AAED;;;;;;;GAOG;AACH,0BAAiC,SAAc;IAC3C,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC;SACvC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,aAAa,CAAC;SAChC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAQ,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;SACrD,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,GAAG,EAAE,IAAI,EAAE,CAAC;AACrB,CAAC;AAND,4CAMC;AAAA,CAAC","sourcesContent":["import 'reflect-metadata';\n\n/**\n * Helper to extract Metadata\n * from a decorator\n *\n * @todo Filter with the right type\n * @param  {any} type\n * @returns any\n */\nexport function extractMetadata(type: any): any {\n    return extractMetadatas(type)\n        .pop();\n};\n\n/**\n * Helper to extract Metadata\n * with the decorator name provided\n *\n * @param  {any} type\n * @param  {string} name\n */\nexport function extractMetadataByDecorator<T>(type: any, name: string): T {\n    return extractMetadatas(type)\n        .filter(x => x.toString().slice(1) === name)\n        .map(x => <T>x)\n        .pop();\n}\n\n/**\n * Helper to extract Metadata\n * from a decorator\n *\n * @todo Filter with the right type\n * @param  {any} decorator\n * @returns []\n */\nexport function extractMetadatas(decorator: any): any[] {\n    return Reflect.getOwnMetadataKeys(decorator)\n        .filter(x => x === 'annotations')\n        .map(x => <any[]>Reflect.getOwnMetadata(x, decorator))\n        .map(x => [].concat(x))\n        .pop() || [];\n};\n"]}