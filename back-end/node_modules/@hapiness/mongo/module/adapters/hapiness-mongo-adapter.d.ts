/// <reference types="node" />
import { ModelManager } from '../managers/model-manager';
import { EventEmitter } from 'events';
import { Observable } from 'rxjs/Observable';
import { HapinessMongoAdapterConstructorArgs } from './interfaces';
export declare class HapinessMongoAdapter extends EventEmitter {
    protected _config: HapinessMongoAdapterConstructorArgs;
    protected _uri: string;
    protected _isReady: boolean;
    protected _connection: any;
    protected _db: any;
    protected _modelManager: ModelManager;
    static getInterfaceName(): string;
    constructor(options: HapinessMongoAdapterConstructorArgs);
    connect(): Observable<void>;
    tryConnect(): Observable<void>;
    protected _tryConnect(): Observable<void>;
    protected _afterConnect(): Observable<void>;
    getLibrary(): any;
    registerValue(schema: any, collection: string): any;
    getModelManager(): ModelManager;
    protected onConnected(): Observable<void>;
    protected onDisconnected(): Observable<void>;
    protected onError(err?: any): Observable<void>;
    whenReady(options?: {
        timeout: number;
    }): Observable<void>;
    isConnected(): boolean;
    isReady(): boolean;
    getUri(): string;
    getConnection(): any;
}
