{"version":3,"file":"test-utils.js","sourceRoot":"","sources":["../../../../src/module/utils/test-utils.ts"],"names":[],"mappings":";;AAAA,yCAA0C;AAE1C,0CAAiD;AAEjD;IAII;;;;;OAKG;IACH,0BAA0B;IACnB,MAAM,CAAC,UAAU,CAAC,IAAkB;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACH,0BAA0B;IACnB,MAAM,CAAC,SAAS,CAAC,IAAkB;QACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B;IACnB,MAAM,CAAC,uBAAuB,CAAC,KAAU;QAC5C,MAAM,CAAC,eAAQ,CAAC,QAAQ,CAAC;aACpB,EAAE;aACF,GAAG,CAAC,6BAAkB,CAAC;aACvB,QAAQ,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;CAEJ;AArDD,wCAqDC","sourcesContent":["import { Hapiness } from '@hapiness/core';\nimport { Model } from 'mongoose';\nimport { MongoClientService } from '../services';\n\nexport class MongoTestUtils {\n\n    private static spawn;\n\n    /**\n     * Start the mongo deamon\n     *\n     * @param  {(err?)=>{}} done\n     * @returns void\n     */\n    /* istanbul ignore next */\n    public static startMongo(done: (err?) => {}): void {\n        if (this.spawn) {\n            this.spawn.kill();\n        }\n        this.spawn = require('child_process').spawn('mongod', ['--dbpath', '/tmp']);\n        this.spawn.on('error', (err) => {\n            done(err);\n        });\n        setTimeout(() => done(), 1500);\n    }\n\n    /**\n     * Stop the mongo deamon\n     *\n     * @param  {(err?)=>{}} done\n     * @returns void\n     */\n    /* istanbul ignore next */\n    public static stopMongo(done: (err?) => {}): void {\n        if (!this.spawn) {\n            return;\n        }\n        this.spawn.kill();\n        this.spawn = null;\n        setTimeout(() => done(), 1500);\n    }\n\n    /**\n     * Util to get the Mongoose Model\n     * from the root module DI\n     *\n     * @param  {any} model\n     * @returns Model\n     */\n    /* istanbul ignore next */\n    public static getDefaultMongooseModel(model: any): Model<any> {\n        return Hapiness['module']\n            .di\n            .get(MongoClientService)\n            .getModel({ adapter: 'mongoose' }, model);\n    }\n\n}\n"]}