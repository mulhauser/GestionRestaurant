{"version":3,"file":"model-manager.js","sourceRoot":"","sources":["../../../../src/module/managers/model-manager.ts"],"names":[],"mappings":";;AAEA;CAGC;AAHD,8BAGC;AAED;IAAA;QAEY,WAAM,GAAgB,EAAE,CAAC;IAarC,CAAC;IAXU,GAAG,CAAC,IAAe;QACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,GAAG,CAAC,KAAgB;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IACzC,CAAC;CACJ;AAfD,oCAeC","sourcesContent":["import { Type } from '@hapiness/core';\n\nexport class ModelItem {\n    token: Type<any>;\n    value: any;\n}\n\nexport class ModelManager {\n\n    private models: ModelItem[] = [];\n\n    public add(item: ModelItem) {\n        if (!item) {\n            throw new Error('ModelManager - Cannot add empty item');\n        }\n        this.models.push(item);\n    }\n\n    public get(token: Type<any>) {\n        const item = this.models.find(_ => _.token === token);\n        return item ? item.value : undefined;\n    }\n}\n"]}