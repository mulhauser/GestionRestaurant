{"version":3,"file":"logger.extension.js","sourceRoot":"","sources":["../../../src/module/logger.extension.ts"],"names":[],"mappings":";;AACA,gDAA6C;AAC7C,+BAA+B;AAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,2BAA2B,CAAC,CAAC;AAMjD;IAEI,MAAM,CAAC,SAAS,CAAC,MAAoB;QACjC,MAAM,CAAC;YACH,KAAK,EAAE,SAAS;YAChB,MAAM;SACT,CAAC;IACN,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CAAC,MAAkB,EAAE,MAAoB;QACpD,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC/B,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAChC,QAAQ,CAAC,IAAI,CAAY;gBACrB,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,MAAM,CAAC,MAAM;aACvB,CAAC,CAAC;YACH,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA5BD,8BA4BC","sourcesContent":["import { ExtensionWithConfig, Extension, CoreModule } from '@hapiness/core';\nimport { Observable } from 'rxjs/Observable';\nimport * as Debug from 'debug';\nconst debug = Debug('hapiness:extension:logger');\n\nexport interface LoggerConfig {\n    logger: any\n}\n\nexport class LoggerExt {\n\n    static setConfig(config: LoggerConfig): ExtensionWithConfig {\n        return {\n            token: LoggerExt,\n            config\n        };\n    }\n\n    /**\n     * Initilization of the extension\n     * Create the logger instance\n     *\n     * @param  {CoreModule} module\n     * @param  {LoggerConfig} config\n     * @returns Observable\n     */\n    onExtensionLoad(module: CoreModule, config: LoggerConfig): Observable<Extension> {\n        debug('logger extension load');\n        return Observable.create(observer => {\n            observer.next(<Extension>{\n                instance: this,\n                token: LoggerExt,\n                value: config.logger\n            });\n            observer.complete();\n        });\n    }\n}\n"]}