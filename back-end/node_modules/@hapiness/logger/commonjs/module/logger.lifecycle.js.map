{"version":3,"file":"logger.lifecycle.js","sourceRoot":"","sources":["../../../src/module/logger.lifecycle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,yCAOwB;AACxB,qDAAiD;AACjD,mDAA8D;AAC9D,iCAAyC;AAKzC,IAAa,UAAU,GAAvB;IAEI,YAAuD,MAAoB,EACvD,MAAqB;QADc,WAAM,GAAN,MAAM,CAAc;QACvD,WAAM,GAAN,MAAM,CAAe;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;IACtD,CAAC;IAED,OAAO,CAAC,OAAgB,EAAE,KAAwB;QAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,KAAK,CAAC,QAAQ,EAAE,CAAC;YACjB,MAAM,CAAC;QACX,CAAC;QACD,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;QACrF,MAAM,IAAI,GAAG;YACT,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,UAAU,EAAE,UAAU;SACzB,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,IAAI,CACZ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,EACjF,IAAI,CACP,CAAC;QACF,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACK,SAAS,CAAC,MAAc;QAC5B,wBAAwB;QACxB,EAAE,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,eAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,eAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1C,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,SAAS,CAAC,MAAc;QAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACrC,0BAA0B;QAC1B,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,KAAK,KAAK;gBACN,MAAM,CAAC,eAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,KAAK,MAAM;gBACP,MAAM,CAAC,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,KAAK,KAAK;gBACN,MAAM,CAAC,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,KAAK,QAAQ;gBACT,MAAM,CAAC,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC;gBACI,MAAM,CAAC,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;CACJ,CAAA;AA9DY,UAAU;IAHtB,gBAAS,CAAC;QACP,KAAK,EAAE,eAAe;KACzB,CAAC;IAGe,WAAA,eAAQ,EAAE,CAAA,EAAE,WAAA,aAAM,CAAC,6BAAa,CAAC,CAAA;6CAClB,8BAAa;GAHhC,UAAU,CA8DtB;AA9DY,gCAAU","sourcesContent":["import {\n    Optional,\n    Inject,\n    Lifecycle,\n    OnEvent,\n    Request,\n    ReplyWithContinue\n} from '@hapiness/core';\nimport { LoggerService } from './logger.service';\nimport { LOGGER_CONFIG, LoggerConfig } from './logger.config';\nimport { default as Chalk } from 'chalk';\n\n@Lifecycle({\n    event: 'onPreResponse'\n})\nexport class AccessLogs implements OnEvent {\n\n    constructor(@Optional() @Inject(LOGGER_CONFIG) private config: LoggerConfig,\n                private logger: LoggerService) {\n        this.config = this.config || { accessLogs: true };\n    }\n\n    onEvent(request: Request, reply: ReplyWithContinue) {\n        if (!this.config.accessLogs) {\n            reply.continue();\n            return;\n        }\n        const statusCode = request.response.statusCode || request.response.output.statusCode;\n        const data = {\n            method: request.method,\n            path: request.path,\n            query: request.query,\n            params: request.params,\n            statusCode: statusCode\n        };\n        this.logger.info(\n            `${this.getMethod(request.method)} ${request.path} ${this.getStatus(statusCode)}`,\n            data\n        );\n        reply.continue();\n    }\n\n    /**\n     * Get formatted status\n     *\n     * @param  {number} status\n     */\n    private getStatus(status: number): string {\n        /* istanbul ignore if */\n        if (status >= 400) {\n            return Chalk.red(status.toString());\n        } else {\n            return Chalk.green(status.toString());\n        }\n    }\n\n    /**\n     * Get formatted method\n     *\n     * @param  {string} method\n     */\n    private getMethod(method: string): string {\n        const _method = method.toUpperCase();\n        /* istanbul ignore next */\n        switch (_method) {\n            case 'GET':\n                return Chalk.green.bold(_method);\n            case 'POST':\n                return Chalk.yellow.bold(_method);\n            case 'PUT':\n                return Chalk.blue.bold(_method);\n            case 'DELETE':\n                return Chalk.red.bold(_method);\n            default:\n                return Chalk.cyan.bold(_method);\n        }\n    }\n}\n"]}