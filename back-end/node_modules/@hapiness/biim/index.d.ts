/// <reference types="boom" />
import { BoomError as BiimError } from 'boom';
export { BiimError };
export * from './biim.module';
export declare class Biim {
    private static dataInPayload(error, payload?);
    private static generateKey(error);
    private static messageToKey(message?);
    static wrap(error: Error, statusCode?: number, message?: string, payload?: any): BiimError;
    static create(statusCode: number, message?: string, data?: any, payload?: any): BiimError;
    static badRequest(message?: string, data?: any, payload?: any): BiimError;
    static unauthorized(message?: string, scheme?: any, attributes?: any, payload?: any): BiimError;
    static paymentRequired(message?: string, data?: any, payload?: any): BiimError;
    static forbidden(message?: string, data?: any, payload?: any): BiimError;
    static notFound(message?: string, data?: any, payload?: any): BiimError;
    static methodNotAllowed(message?: string, data?: any, allow?: string | string[], payload?: any): BiimError;
    static notAcceptable(message?: string, data?: any, payload?: any): BiimError;
    static proxyAuthRequired(message?: string, data?: any, payload?: any): BiimError;
    static clientTimeout(message?: string, data?: any, payload?: any): BiimError;
    static conflict(message?: string, data?: any, payload?: any): BiimError;
    static resourceGone(message?: string, data?: any, payload?: any): BiimError;
    static lengthRequired(message?: string, data?: any, payload?: any): BiimError;
    static preconditionFailed(message?: string, data?: any, payload?: any): BiimError;
    static entityTooLarge(message?: string, data?: any, payload?: any): BiimError;
    static uriTooLong(message?: string, data?: any, payload?: any): BiimError;
    static unsupportedMediaType(message?: string, data?: any, payload?: any): BiimError;
    static rangeNotSatisfiable(message?: string, data?: any, payload?: any): BiimError;
    static expectationFailed(message?: string, data?: any, payload?: any): BiimError;
    static teapot(message?: string, data?: any, payload?: any): BiimError;
    static badData(message?: string, data?: any, payload?: any): BiimError;
    static locked(message?: string, data?: any, payload?: any): BiimError;
    static preconditionRequired(message?: string, data?: any, payload?: any): BiimError;
    static tooManyRequests(message?: string, data?: any, payload?: any): BiimError;
    static illegal(message?: string, data?: any, payload?: any): BiimError;
    static internal(message?: string, data?: any, statusCode?: number, payload?: any): BiimError;
    static notImplemented(message?: string, data?: any, payload?: any): BiimError;
    static badGateway(message?: string, data?: any, payload?: any): BiimError;
    static serverUnavailable(message?: string, data?: any, payload?: any): BiimError;
    static gatewayTimeout(message?: string, data?: any, payload?: any): BiimError;
    static badImplementation(message?: string, data?: any, payload?: any): BiimError;
}
