{"version":3,"file":"application.module.js","sourceRoot":"","sources":["../src/application.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAqF;AACrF,6CAA+D;AAa/D,IAAa,iBAAiB,GAA9B;IACI;;;;;OAKG;IACH,YAAoB,WAA8B,EAAU,OAAsB;QAA9D,gBAAW,GAAX,WAAW,CAAmB;QAAU,YAAO,GAAP,OAAO,CAAe;IAAG,CAAC;IACtF;;;;OAIG;IACH,OAAO;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gDAAgD,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9G,CAAC;IAED;;;;;;;OAOG;IACH,OAAO,CAAC,KAAY,EAAE,IAAU;QAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;IAC7E,CAAC;CACJ,CAAA;AA5BY,iBAAiB;IAV7B,qBAAc,CAAC;QACZ,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE;YACL,qBAAY;SACf;QACD,YAAY,EAAE,EAAE;QAChB,SAAS,EAAE;YACP,wBAAiB;SACpB;KACJ,CAAC;qCAQmC,wBAAiB,EAAmB,sBAAa;GAPzE,iBAAiB,CA4B7B;AA5BY,8CAAiB","sourcesContent":["import { HapinessModule, HttpServerService, OnError, OnStart } from '@hapiness/core';\nimport { LoggerModule, LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs/Observable';\n\n@HapinessModule({\n    version: '1.0.0',\n    imports: [\n        LoggerModule\n    ],\n    declarations: [],\n    providers: [\n        HttpServerService\n    ]\n})\nexport class ApplicationModule implements OnStart, OnError {\n    /**\n     * Class constructor\n     *\n     * @param {HttpServerService} _httpServer wrapper for instance of original Hapi server\n     * @param {LoggerService} _logger\n     */\n    constructor(private _httpServer: HttpServerService, private _logger: LoggerService) {}\n    /**\n     * On start process\n     *\n     * @return {void | Observable<any>}\n     */\n    onStart(): void | Observable<any> {\n        this._logger.info(`< Application.bootstrap > Server started at: ${this._httpServer.instance().info.uri}`);\n    }\n\n    /**\n     * On error process\n     *\n     * @param {Error} error\n     * @param data\n     *\n     * @return {void | Observable<any>}\n     */\n    onError(error: Error, data?: any): void | Observable<any> {\n        this._logger.error('A problem occurred during application\\'s lifecycle');\n    }\n}\n"]}