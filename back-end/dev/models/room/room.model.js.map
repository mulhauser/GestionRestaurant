{"version":3,"file":"room.model.js","sourceRoot":"","sources":["../../../src/models/room/room.model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2CAAwE;AACxE,6CAA0C;AAO1C,IAAa,SAAS,iBAAtB,eAAuB,SAAQ,aAAK;IAIhC;;;;OAIG;IACH,YAAoB,mBAAuC;QACvD,0BAA0B;QAC1B,KAAK,CAAC,WAAS,CAAC,CAAC;QAFD,wBAAmB,GAAnB,mBAAmB,CAAoB;QAIvD,UAAU;QACV,MAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpE,gBAAgB;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;YACzB,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;YACtC,QAAQ,EAAE;gBACN,EAAE,IAAI,EAAE,MAAM,EAAE;aACnB;SACJ,EAAE;YACC,UAAU,EAAE,KAAK;SACpB,CAAC,CAAC;QAEH,sDAAsD;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;YAClB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,UAAU,GAAG,EAAE,GAAG;gBACzB,OAAO,GAAG,CAAC,GAAG,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC;YACf,CAAC;SACJ,CACJ,CAAC;IACN,CAAC;CACJ,CAAA;AApCY,SAAS;IALrB,kBAAU,CAAC;QACR,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,OAAO;QACnB,OAAO,EAAE,eAAM,CAAC,GAAG,CAAC,SAAS,CAAC;KACjC,CAAC;qCAU2C,0BAAkB;GATlD,SAAS,CAoCrB;AApCY,8BAAS","sourcesContent":["import { Model, MongoClientService, MongoModel } from '@hapiness/mongo';\nimport { Config } from '@hapiness/config';\n\n@MongoModel({\n    adapter: 'mongoose',\n    collection: 'rooms',\n    options: Config.get('mongodb')\n})\nexport class RoomModel extends Model {\n    // property to store schema\n    readonly schema: any;\n\n    /**\n     * Class constructor\n     *\n     * @param {MongoClientService} _mongoClientService\n     */\n    constructor(private _mongoClientService: MongoClientService) {\n        // call parent constructor\n        super(RoomModel);\n\n        // get dao\n        const dao = this._mongoClientService.getDao(this.connectionOptions);\n\n        // create schema\n        this.schema = new dao.Schema({\n            name: { type: String, required: true },\n            idTables: [\n                { type: String }\n            ]\n        }, {\n            versionKey: false\n        });\n\n        // implement virtual method toJSON to delete _id field\n        this.schema.set('toJSON', {\n                virtuals: true,\n                transform: function (doc, ret) {\n                    delete ret._id;\n                    return ret;\n                }\n            }\n        );\n    }\n}\n"]}