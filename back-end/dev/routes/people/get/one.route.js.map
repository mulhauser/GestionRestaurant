{"version":3,"file":"one.route.js","sourceRoot":"","sources":["../../../../src/routes/people/get/one.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AAGvD,gDAAkD;AAGlD,2BAA2B;AAiC3B,IAAa,iBAAiB,GAA9B;IACI;;;OAGG;IACH,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IAAG,CAAC;IAErD;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;CACJ,CAAA;AAdY,iBAAiB;IA/B7B,YAAK,CAAC;QACH,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;iBAC9B;aACJ;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC3B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE;wBACnB,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAClC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;wBACtC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC9B,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;4BACvB,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BAC/B,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BACnC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;yBAChC,CAAC,CAAC,QAAQ,EAAE;qBAChB,CAAC;iBACL;aACJ;YACD,WAAW,EAAE,gBAAgB;YAC7B,KAAK,EAAE,uDAAuD;YAC9D,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;SAC1B;KACJ,CAAC;qCAMsC,wBAAa;GALxC,iBAAiB,CAc7B;AAdY,8CAAiB","sourcesContent":["import { OnGet, Route, Request } from '@hapiness/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { PeopleService } from '../../../services';\r\nimport { People } from '../../../interfaces/people';\r\n\r\nimport * as Joi from 'joi';\r\n\r\n@Route({\r\n    path: '/api/people/{id}',\r\n    method: 'GET',\r\n    config: {\r\n        validate: {\r\n            params: {\r\n                id: Joi.string().required()\r\n            }\r\n        },\r\n        response: {\r\n            status: {\r\n                200: Joi.object().keys({\r\n                    id: Joi.string().required(),\r\n                    photo: Joi.string(),\r\n                    firstname: Joi.string().required(),\r\n                    lastname: Joi.string().required(),\r\n                    email: Joi.string().email().required(),\r\n                    phone: Joi.string().required(),\r\n                    address: Joi.object().keys({\r\n                        street: Joi.string().required(),\r\n                        postalCode: Joi.number().required(),\r\n                        city: Joi.string().required()\r\n                    }).required()\r\n                })\r\n            }\r\n        },\r\n        description: 'Get one people',\r\n        notes: 'Returns one people for the given id in path parameter',\r\n        tags: ['api', 'people']\r\n    }\r\n})\r\nexport class GetOnePeopleRoute implements OnGet {\r\n    /**\r\n     * Class constructor\r\n     * @param _peopleService\r\n     */\r\n    constructor(private _peopleService: PeopleService) {}\r\n\r\n    /**\r\n     * OnGet implementation\r\n     * @param request\r\n     */\r\n    onGet(request: Request): Observable<People> {\r\n        return this._peopleService.one(request.params.id);\r\n    }\r\n}\r\n"]}