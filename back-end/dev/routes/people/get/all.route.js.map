{"version":3,"file":"all.route.js","sourceRoot":"","sources":["../../../../src/routes/people/get/all.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AAIvD,gDAAkD;AAElD,2BAA2B;AA8B3B,IAAa,iBAAiB,GAA9B;IACI;;;OAGG;IACH,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IACjD,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;CACJ,CAAA;AAfY,iBAAiB;IA5B7B,YAAK,CAAC;QACH,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAClB,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACd,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC3B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE;wBACnB,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAClC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;wBACtC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC9B,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;4BACvB,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BAC/B,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BACnC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;yBAChC,CAAC,CAAC,QAAQ,EAAE;qBAChB,CAAC,CACL,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBACpB;aACJ;YACD,WAAW,EAAE,gBAAgB;YAC7B,KAAK,EAAE,mCAAmC;YAC1C,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;SAC1B;KACJ,CAAC;qCAMsC,wBAAa;GALxC,iBAAiB,CAe7B;AAfY,8CAAiB","sourcesContent":["import { OnGet, Route, Request } from '@hapiness/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { People } from '../../../interfaces';\r\nimport { PeopleService } from '../../../services';\r\n\r\nimport * as Joi from 'joi';\r\n\r\n@Route({\r\n    path: '/api/people',\r\n    method: 'GET',\r\n    config: {\r\n        response: {\r\n            status: {\r\n                200: Joi.array().items(\r\n                    Joi.object().keys({\r\n                        id: Joi.string().required(),\r\n                        photo: Joi.string(),\r\n                        firstname: Joi.string().required(),\r\n                        lastname: Joi.string().required(),\r\n                        email: Joi.string().email().required(),\r\n                        phone: Joi.string().required(),\r\n                        address: Joi.object().keys({\r\n                            street: Joi.string().required(),\r\n                            postalCode: Joi.number().required(),\r\n                            city: Joi.string().required()\r\n                        }).required()\r\n                    })\r\n                ).unique().min(1)\r\n            }\r\n        },\r\n        description: 'Get all people',\r\n        notes: 'Returns an array of people or 204',\r\n        tags: ['api', 'people']\r\n    }\r\n})\r\nexport class GetAllPeopleRoute implements OnGet {\r\n    /**\r\n     * Class constructor\r\n     * @param _peopleService\r\n     */\r\n    constructor(private _peopleService: PeopleService) {\r\n    }\r\n\r\n    /**\r\n     * OnGet implementation\r\n     * @param request\r\n     */\r\n    onGet(request: Request): Observable<People[] | void> {\r\n        return this._peopleService.listAll();\r\n    }\r\n}\r\n"]}