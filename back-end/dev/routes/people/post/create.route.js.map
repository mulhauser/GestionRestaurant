{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/people/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAwD;AAIxD,gDAAkD;AAGlD,2BAA2B;AA+C3B,IAAa,qBAAqB,GAAlC;IACI;;;OAGG;IACH,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IACjD,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAiB,CAAC,CAAC;IACjE,CAAC;CACJ,CAAA;AAfY,qBAAqB;IA7CjC,YAAK,CAAC;QACH,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;oBACvB,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE;oBACnB,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;oBAClC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;oBACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;oBACtC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;oBAC9B,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACvB,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC/B,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBACnC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;qBAChC,CAAC,CAAC,QAAQ,EAAE;iBAChB,CAAC;aACL;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC3B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE;wBACnB,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAClC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;wBACtC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC9B,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;4BACvB,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BAC/B,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;4BACnC,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;yBAChC,CAAC,CAAC,QAAQ,EAAE;qBAChB,CAAC;iBACL;aACJ;YACD,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,mCAAmC;YAC1C,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;SAC1B;KACJ,CAAC;qCAMsC,wBAAa;GALxC,qBAAqB,CAejC;AAfY,sDAAqB","sourcesContent":["import { OnPost, Route, Request } from '@hapiness/core';\r\nimport { HapinessHTTPHandlerResponse } from '@hapiness/core/extensions/http-server';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { PeopleService } from '../../../services';\r\nimport { People } from '../../../interfaces';\r\n\r\nimport * as Joi from 'joi';\r\n\r\n@Route({\r\n    path: '/api/people',\r\n    method: 'POST',\r\n    config: {\r\n        validate: {\r\n            payload: Joi.object().keys({\r\n                photo: Joi.string(),\r\n                firstname: Joi.string().required(),\r\n                lastname: Joi.string().required(),\r\n                email: Joi.string().email().required(),\r\n                phone: Joi.string().required(),\r\n                address: Joi.object().keys({\r\n                    street: Joi.string().required(),\r\n                    postalCode: Joi.number().required(),\r\n                    city: Joi.string().required()\r\n                }).required()\r\n            })\r\n        },\r\n        payload: {\r\n            output: 'data',\r\n            allow: 'application/json',\r\n            parse: true\r\n        },\r\n        response: {\r\n            status: {\r\n                201: Joi.object().keys({\r\n                    id: Joi.string().required(),\r\n                    photo: Joi.string(),\r\n                    firstname: Joi.string().required(),\r\n                    lastname: Joi.string().required(),\r\n                    email: Joi.string().email().required(),\r\n                    phone: Joi.string().required(),\r\n                    address: Joi.object().keys({\r\n                        street: Joi.string().required(),\r\n                        postalCode: Joi.number().required(),\r\n                        city: Joi.string().required()\r\n                    }).required()\r\n                })\r\n            }\r\n        },\r\n        description: 'Create one people',\r\n        notes: 'Create a new people and return it',\r\n        tags: ['api', 'people']\r\n    }\r\n})\r\nexport class PostCreatePeopleRoute implements OnPost {\r\n    /**\r\n     * Class constructor\r\n     * @param _peopleService\r\n     */\r\n    constructor(private _peopleService: PeopleService) {\r\n    }\r\n\r\n    /**\r\n     * OnPost implementation\r\n     * @param request\r\n     */\r\n    onPost(request: Request): Observable<HapinessHTTPHandlerResponse> {\r\n        return this._peopleService.create(request.payload as People);\r\n    }\r\n}\r\n"]}