{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/dish/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAwD;AAIxD,2BAA2B;AAC3B,sEAAgE;AA4ChE,IAAa,mBAAmB,GAAhC;IACI;;;OAGG;IACH,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAC7C,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,OAAe,CAAC,CAAC;IAC7D,CAAC;CACJ,CAAA;AAfY,mBAAmB;IAzC/B,YAAK,CAAC;QACH,IAAI,EAAE,WAAW;QACjB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;oBACvB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;oBAC7B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;oBAC9B,WAAW,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAC1B,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACd,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBACtC,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;qBACvC,CAAC,CACL;iBACJ,CAAC;aACL;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC3B,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC7B,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC9B,WAAW,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAC1B,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;4BACd,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE;4BAC3B,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE;yBAC5B,CAAC,CACL;qBACJ,CAAC;iBACL;aACJ;YACD,WAAW,EAAE,iBAAiB;YAC9B,KAAK,EAAE,iCAAiC;YACxC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;SACxB;KACJ,CAAC;qCAMoC,0BAAW;GALpC,mBAAmB,CAe/B;AAfY,kDAAmB","sourcesContent":["import { OnPost, Route, Request } from '@hapiness/core';\nimport { HapinessHTTPHandlerResponse } from '@hapiness/core/extensions/http-server';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as Joi from 'joi';\nimport {DishService} from '../../../services/dish/dish.service';\nimport {Dish} from '../../../interfaces/dish';\n\n@Route({\n    path: '/api/dish',\n    method: 'POST',\n    config: {\n        validate: {\n            payload: Joi.object().keys({\n                name: Joi.string().required(),\n                price: Joi.number().required(),\n                ingredients: Joi.array().items(\n                    Joi.object().keys({\n                        refIngredient: Joi.string().required(),\n                        quantityUse: Joi.number().required()\n                    })\n                )\n            })\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                201: Joi.object().keys({\n                    id: Joi.string().required(),\n                    name: Joi.string().required(),\n                    price: Joi.number().required(),\n                    ingredients: Joi.array().items(\n                        Joi.object().keys({\n                            refIngredient: Joi.string(),\n                            quantityUse: Joi.number()\n                        })\n                    )\n                })\n            }\n        },\n        description: 'Create one dish',\n        notes: 'Create a new dish and return it',\n        tags: ['api', 'dish']\n    }\n})\nexport class PostCreateDishRoute implements OnPost {\n    /**\n     * Class constructor\n     * @param _peopleService\n     */\n    constructor(private _dishService: DishService) {\n    }\n\n    /**\n     * OnPost implementation\n     * @param request\n     */\n    onPost(request: Request): Observable<HapinessHTTPHandlerResponse> {\n        return this._dishService.create(request.payload as Dish);\n    }\n}\n"]}