{"version":3,"file":"update.route.js","sourceRoot":"","sources":["../../../../src/routes/room/put/update.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AAIvD,2BAA2B;AAC3B,sEAAgE;AAoChE,IAAa,kBAAkB,GAA/B;IACI;;;OAGG;IACH,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAC7C,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IACxE,CAAC;CACJ,CAAA;AAfY,kBAAkB;IAjC9B,YAAK,CAAC;QACH,IAAI,EAAE,gBAAgB;QACtB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;iBAC9B;gBACD,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;oBACvB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;iBAChC,CAAC;aACL;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC3B,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;wBAC7B,QAAQ,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CACvB,GAAG,CAAC,MAAM,EAAE,CACf;qBACJ,CAAC;iBACL;aACJ;YACD,WAAW,EAAE,iBAAiB;YAC9B,KAAK,EAAE,kEAAkE;YACzE,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;SACxB;KACJ,CAAC;qCAMoC,0BAAW;GALpC,kBAAkB,CAe9B;AAfY,gDAAkB","sourcesContent":["import { OnPut, Route, Request } from '@hapiness/core';\nimport { Observable } from 'rxjs/Observable';\n\n\nimport * as Joi from 'joi';\nimport {RoomService} from '../../../services/room/room.service';\nimport {Room} from '../../../interfaces/room';\n\n@Route({\n    path: '/api/room/{id}',\n    method: 'PUT',\n    config: {\n        validate: {\n            params: {\n                id: Joi.string().required()\n            },\n            payload: Joi.object().keys({\n                name: Joi.string().required()\n            })\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                200: Joi.object().keys({\n                    id: Joi.string().required(),\n                    name: Joi.string().required(),\n                    idTables: Joi.array().items(\n                        Joi.string()\n                    )\n                })\n            }\n        },\n        description: 'Update one room',\n        notes: 'Update the room for the given id in path parameter and return it',\n        tags: ['api', 'room']\n    }\n})\nexport class PutUpdateRoomRoute implements OnPut {\n    /**\n     * Class constructor\n     * @param _peopleService\n     */\n    constructor(private _roomService: RoomService) {\n    }\n\n    /**\n     * OnPut implementation\n     * @param request\n     */\n    onPut(request: Request): Observable<Room> {\n        return this._roomService.update(request.params.id, request.payload);\n    }\n}\n"]}